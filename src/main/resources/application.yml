spring:
  # 避免类加载器冲突，可配置参数-Dspring.devtools.restart.enabled=false
  devtools:
    restart:
      enabled: false
  # redis配置信息
  data:
    redis:
      host: localhost
      port: 6379
      password: # 没设置用户名，密码则留空
      ttl: 3600 # 默认过期时间 1小时
      database: 0
  application:
    name: ai-code
  profiles:
    active: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ai_code
    username: ${xlb.db.user}
    password: ${xlb.db.password}
  # session配置
  session:
    store-type: redis
    timeout: 2592000 # 30天过期时间

# langchain4j配置
langchain4j:
  open-ai:
    chat-model:
      base-url: https://api.deepseek.com
      api-key: ${xlb.deepseek.apikey}
      model-name: deepseek-chat
      max-tokens: 8192
      log-requests: true
      log-responses: true
      max-retries: 3
      strict-json-schema: true
      response-format: json_object # 结构化输出
    # 通用流式聊天 AI 模型配置
    streaming-chat-model:
      base-url: https://api.deepseek.com
      api-key: ${xlb.deepseek.apikey}
      model-name: deepseek-chat
      max-tokens: 8192
      log-requests: true
      log-responses: true
    # 智能路由 AI 模型配置
    routing-chat-model:
      api-key: ${xlb.deepseek.apikey}
      base-url: https://api.deepseek.com
      model-name: deepseek-chat
      log-requests: true
      log-responses: true
      max-tokens: 100
    # 推理 AI 模型配置（用于复杂的推理任务）
    reasoning-streaming-chat-model: # 配置SSE模式，流式输出
      base-url: https://api.deepseek.com
      api-key: ${xlb.deepseek.apikey}
      model-name: deepseek-reasoner
      log-requests: true
      log-responses: true
      max-tokens: 32768
      temperature: 0.0 # 适合代码生成类任务

server:
  port: 9091
  servlet:
    context-path: /api
    # cookie 30天过期
    session:
      cookie:
        max-age: 2592000

# 腾讯云cos配置
cos:
  client:
    host: ${xlb.cos.host}
    secretId: ${xlb.cos.secretId}
    secretKey: ${xlb.cos.secretKey}
    region: ${xlb.cos.region}
    bucket: ${xlb.cos.bucket}

# springdoc-openapi
springdoc:
  group-configs:
    - group: 'ai-code-controller'
      packages-to-scan: com.xielaoban.aicode.controller
# knife4j
knife4j:
  enable: true
  setting:
    language: zh_cn

mybatis-flex:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

pexels:
  api-key: ${xlb.pexels.apikey}
# 阿里云 DashScope 配置
dashscope:
  api-key: ${xlb.dashscope.apikey}
  image-model: wan2.2-t2i-flash


logging:
  level:
    web: info

